{"version":3,"sources":["themes/colors.js","themes/font-sizes.js","components/Button/Button.styled.js","components/InputField/InputField.styled.js","components/InputField/index.js","components/Button/Button.jsx","components/Button/index.js","components/FormWrapper/FormWrapper.styled.js","components/SelectField/SelectField.styled.js","components/SelectField/SelectField.jsx","components/SelectField/index.js","components/TextField/TextField.styled.js","components/TextField/TextField.jsx","components/TextField/index.js","components/FieldSeparator/FieldSeparator.styled.js","components/FieldSeparator/FieldSeparator.jsx","components/FieldSeparator/index.js","components/MultiValueField/index.js","components/MultiValueField/MultiValueField.jsx","components/TrashButton/TrashButton.styled.js","components/TrashButton/TrashButton.jsx","components/TrashButton/index.js","components/FormWrapper/FormWrapper.jsx","App.styled.js","shared/ErrorMessage/ErrorMessage.styled.js","shared/ErrorMessage/ErrorMessage.jsx","shared/LoadingSpinner/LoadingSpinner.styled.js","shared/LoadingSpinner/index.js","shared/LoadingSpinner/LoadingSpinner.jsx","components/ResultBox/ResultBox.styled.js","components/ResultBox/index.js","App.js","shared/constants/index.js","index.js"],"names":["water","white","lg","TextWrapper","styled","div","_templateObject","setBgColor","props","defaultColor","disabled","isLoading","RightIcon","span","_templateObject2","visibility","submitType","getRightIconVisibility","Label","_templateObject3","Content","_templateObject4","ButtonWrapper","button","_templateObject5","Spinner","FaSpinner","_templateObject6","InputFieldWrapper","InputField_styled_templateObject","ChildrenText","react_default","a","createElement","children","defaultProps","ButtonIcons","_ref","Button","InputField","Object","assign","type","isDisabled","onClick","e","Button_this","preventDefault","bind","Button_ChildrenText","Button_ButtonIcons","StyledFormWrapper","FormWrapper_styled_templateObject","Select","select","SelectField_styled_templateObject","SelectField","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nextProps","options","onChange","name","title","_this","target","value","map","item","key","React","Component","undefined","StyledTextField","input","TextField_styled_templateObject","TextField","StyledFieldSeparator","FieldSeparator_styled_templateObject","FieldSeparatorWrapper","FieldSeparator_styled_templateObject2","FieldSeparator","separator","MultiValueField","Fragment","components_TextField","multiValueOnChange","components_FieldSeparator","StyledTrashButton","FaTrash","TrashButton_styled_templateObject","TrashButtonWrapper","TrashButton_styled_templateObject2","TrashButton","FormWrapper","components_SelectField","predicates","predicateValue","operators","operatorValue","multiValue","components_MultiValueField","components_TrashButton","removeFilter","AppWrapper","App_styled_templateObject","ErrorMessageContainer","ErrorMessage_styled_templateObject","ErrorMessageBox","ErrorMessage_styled_templateObject2","CloseIcon","FaWindowClose","ErrorMessage_styled_templateObject3","ErrorMessage","error","dismissError","LoadingOverlay","LoadingSpinner_styled_templateObject","StyledSpinner","LoadingSpinner_styled_templateObject2","LoadingSpinner","ResultBox","ResultBox_styled_templateObject","App","state","filters","errors","_this2","setState","isFetching","fetch","then","content","json","keys","forEach","defineProperty","addFilter","concat","getInitialFilter","index","filter","errorIndex","prevState","newFilters","toConsumableArray","objectSpread","multiValueIndex","filterKeyVal","updateFilter","_this3","predicate","_this4","getActiveOperators","operator","filterIndex","event","_this5","stopPropagation","validateForm","method","headers","Content-Type","body","JSON","stringify","response","query","_this6","reduce","getFullOperator","Array","isArray","validPatternRegex","RegExp","validPattern","multiValueErrors","test","length","_this7","console","log","App_styled","shared_LoadingSpinner","onSubmit","submitForm","components_FormWrapper_FormWrapper","updateMultiValueFilter","components_Button","shared_ErrorMessage_ErrorMessage","components_ResultBox","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e519d879.chunk.js","sourcesContent":["const coal = '#1f1f1f';\nconst errorRed = '#ab1212';\nconst gravel = '#cfcfcf';\nconst slate = '#4a4a4a';\nconst water = '#14abe0';\nconst waterHover = '#52bfed';\nconst white = '#ffffff';\n\n\nexport {\n  coal,\n  errorRed,\n  gravel,\n  slate,\n  water,\n  waterHover,\n  white,\n};\n","const tiny = '.625rem';\nconst xxs = '.6875rem';\nconst xs = '.75rem';\nconst sm = '.875rem';\nconst regular = '1rem';\nconst lg = '1.25rem';\nconst xl = '1.5rem';\nconst xxl = '2rem';\nconst huge = '3rem';\n\nexport default {\n  tiny,\n  xxs,\n  xs,\n  sm,\n  regular,\n  lg,\n  xl,\n  xxl,\n  huge,\n};\nexport {\n  tiny,\n  xxs,\n  xs,\n  sm,\n  regular,\n  lg,\n  xl,\n  xxl,\n  huge,\n};\n","import styled from 'styled-components';\nimport { FaSpinner } from 'react-icons/fa';\nimport { water, waterHover, white, gravel, slate } from '../../themes/colors';\nimport { regular } from '../../themes/font-sizes';\n\nconst TextWrapper = styled.div`\n  margin-left: 0.5em;\n  margin-right: 0.5em;\n`;\n\nconst getRightIconVisibility = (props) => {\n  let visibility = 'hidden';\n  if (props.isLoading && props.submitType) {\n    visibility = 'visible';\n  }\n  return visibility;\n};\n\nconst setBgColor = (props, defaultColor) => {\n  if (props.disabled || props.isLoading) {\n    return gravel;\n  }\n  return defaultColor;\n};\n\nconst RightIcon = styled.span`\n  visibility: ${props => getRightIconVisibility(props)};\n`;\n\nconst Label = styled.span`\n  display: flex;\n  flex: 1 0 auto;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Content = styled.span`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst ButtonWrapper = styled.button`\n  font-size: ${regular};\n  padding: 0.75em 1em;\n  font-weight: 800;\n  text-align: center;\n  letter-spacing: -0.04em;\n  text-transform: uppercase;\n  box-shadow: none;\n  background-image: 'none';\n  outline: none;\n  background-color: ${props => setBgColor(props, water)};\n  color: ${white};\n  border: none;\n  cursor: pointer;\n\n  &:focus {\n    background-color: ${props => setBgColor(props, water)};\n    color: ${white};\n  }\n\n  &:hover {\n    background-color: ${props => setBgColor(props, waterHover)};\n    color: ${white};\n    border: none;\n  }\n`;\n\nconst Spinner = styled(FaSpinner)`\n  display: flex;\n  margin-left: 0.4rem;\n  animation: spin infinite 2s linear;\n  color: ${slate};\n\n  @keyframes spin {\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport {\n  ButtonWrapper,\n  Content,\n  Label,\n  RightIcon,\n  Spinner,\n  TextWrapper,\n};\n","import styled from 'styled-components';\n\nconst InputFieldWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport {\n  InputFieldWrapper,\n};","import { InputFieldWrapper } from './InputField.styled';\n\nexport default InputFieldWrapper;","import React from 'react';\nimport { bool, func, string } from 'prop-types';\nimport {\n  ButtonWrapper,\n  Content,\n  Label,\n  RightIcon,\n  Spinner,\n  TextWrapper,\n} from './Button.styled';\nimport InputFieldWrapper from '../InputField';\n\nconst ChildrenText = props => (\n  <TextWrapper>\n    {props.isLoading && props.submitType ? 'Loading' : props.children}\n  </TextWrapper>\n);\n\nChildrenText.propTypes = {\n  children: string.isRequired,\n  isLoading: bool,\n};\n\nChildrenText.defaultProps = {\n  isLoading: false,\n};\n\nconst ButtonIcons = ({ isLoading, submitType }) => (\n  <div>\n    { isLoading && submitType && <Spinner /> }\n  </div>\n);\n\nButtonIcons.propTypes = {\n  isLoading: bool,\n};\n\nButtonIcons.defaultProps = {\n  isLoading: false,\n};\n\nconst handleClick = (e) => {\n  if (this.props.isLoading || this.props.isDisabled) {\n    e.preventDefault();\n  } else {\n    this.props.onClick(e);\n  }\n}\n\nconst Button = (props) => {\n  return (\n    <InputFieldWrapper>\n      <ButtonWrapper\n        type={props.submitType ? 'submit' : 'button'}\n        disabled={props.isDisabled}\n        isLoading={props.isLoading}\n        onClick={handleClick.bind(props)}\n        {...props}\n      >\n        <Content>\n          <Label>\n            { props.children\n              ? <ChildrenText isLoading={props.isLoading} submitType={props.submitType}>{props.children}</ChildrenText>\n              : null\n            }\n          </Label>\n\n          <RightIcon isLoading={props.isLoading} submitType={props.submitType}>\n            <ButtonIcons isLoading={props.isLoading} submitType={props.submitType} />\n          </RightIcon>\n        </Content>\n\n      </ButtonWrapper>\n    </InputFieldWrapper>\n  );\n}\n\nButton.propTypes = {\n  /**\n   * Button text\n   */\n  children: string,\n  /**\n   * Disabled state - disables button\n   */\n  isDisabled: bool,\n  /**\n   * Loading state - adds spinner to iconRight and disables button\n   */\n  isLoading: bool,\n  /**\n   * Function that is called when button is clicked\n   */\n  onClick: func.isRequired,\n  /**\n   * whether or not button is a submit button\n   */\n  submitType: bool,\n};\n\nButton.defaultProps = {\n  children: null,\n  isDisabled: false,\n  isLoading: false,\n  onClick: () => {},\n  submitType: false,\n};\n\nexport default Button;\n","import Button from './Button';\n\nexport default Button;","import styled from 'styled-components';\n\nconst StyledFormWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n\n  > * {\n    width: 100%;\n    flex: 1 1 auto;\n    margin: 0 0.5rem 2rem;\n  }\n\n  > *:first-child {\n    margin-left: 0;\n  }\n\n  > *:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport {\n  StyledFormWrapper,\n}","import styled from 'styled-components';\nimport {\n  coal,\n  gravel,\n  water,\n  white,\n} from '../../themes/colors';\nimport { regular } from '../../themes/font-sizes';\n\n// eslint-disable-next-line max-len\nconst SelectIcon = 'data:image/svg+xml;charset=utf8,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' viewBox=\\'0 0 4 5\\'%3E%3Cpath fill=\\'%23333\\' d=\\'M2 0L0 2h4zm0 5L0 3h4z\\'/%3E%3C/svg%3E';\n\nconst Select = styled.select`\n  font-family: Brandon, sans-serif;\n  height: 3.125rem;\n  background: ${white} url(\"${SelectIcon}\") no-repeat right 0.75rem center;\n  background-size: 0.75rem;\n  border: solid;\n  border-width: 0.125rem;\n  border-color: ${water};\n  border-radius: 0;\n  appearance: none;\n  box-sizing: border-box;\n  outline: none;\n  width: 100%;\n  padding: 0.625rem;\n  font-size: ${regular};\n  color: ${coal};\n\n  &:disabled {\n    cursor: not-allowed;\n    border-color: ${gravel};\n  }\n\n  &:enabled:focus {\n    border-color: ${water};\n  }\n\n  &:enabled:active {\n    box-shadow: inset 0 0 0.2rem 0;\n    border-color: ${water};\n  }\n\n  &:enabled:hover {\n    border-color: ${water};\n  }\n`;\n\nexport {\n  Select,\n  SelectIcon\n};\n","import React from 'react';\nimport { bool, func, arrayOf, string, shape } from 'prop-types';\nimport InputFieldWrapper from '../InputField';\nimport { Select } from './SelectField.styled';\n\nclass SelectField extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.options !== this.props.options) {\n      this.props.onChange(nextProps.name, nextProps.options[0].title);\n    }\n  }\n\n  render() {\n    return (\n      <InputFieldWrapper>\n        <Select\n          name={this.props.name}\n          onChange={e => this.props.onChange(e.target.name, e.target.value)}\n          value={this.props.value || this.props.options[0].title}\n          disabled={this.props.disabled}\n        >\n          {this.props.options.map(item => (\n            <option key={item.title} value={item.title}>{item.title}</option>\n          ))}\n        </Select>\n      </InputFieldWrapper>\n    );\n  }\n};\n\nSelectField.propTypes = {\n  /**\n   * Name of the select field\n   */\n  name: string,\n  /**\n   * Function called on onChange event\n   */\n  onChange: func.isRequired,\n  /**\n   * Options displayed in the select field\n   */\n  options: arrayOf(shape({\n    title: string,\n    type: string,\n  }).isRequired).isRequired,\n  /**\n   * Value of the select field\n   */\n  value: string,\n  /**\n   * Passes `disabled` attribute to input element\n   */\n  disabled: bool,\n};\n\nSelectField.defaultProps = {\n  name: 'selectfield',\n  value: undefined,\n  disabled: false,\n  onChange: () => null,\n};\n\nexport default SelectField;\n","import SelectField from './SelectField';\n\nexport default SelectField;","import styled from 'styled-components';\nimport { water, coal, white, gravel } from '../../themes/colors';\nimport { regular } from '../../themes/font-sizes';\n\nconst StyledTextField = styled.input`\n  height: 3.125rem;\n  border: solid;\n  border-width: 0.125rem;\n  border-color: ${water};\n  border-radius: 0;\n  box-sizing: border-box;\n  outline: none;\n  width: 100%;\n  padding: 0.625rem;\n  font-size: ${regular};\n  color: ${coal};\n  background-color: ${white};\n  cursor: text;\n\n  &:disabled {\n    cursor: not-allowed;\n    border-color: ${gravel};\n  }\n\n  &:enabled:focus {\n    border-color: ${water};\n  }\n\n  &:enabled:hover {\n    border-color: ${water};\n  }\n\n  &:enabled:active {\n    box-shadow: inset 0 0 0.2rem 0 ${water};\n  }\n`;\n\nexport {\n  StyledTextField,\n}","import React from 'react';\nimport { bool, func, string } from 'prop-types';\nimport InputFieldWrapper from '../InputField';\nimport { StyledTextField } from './TextField.styled';\n\nconst TextField = (props) => {\n  return (\n    <InputFieldWrapper>\n      <StyledTextField name={props.name} onChange={e => props.onChange(e.target.name, e.target.value)} disabled={props.disabled} />\n    </InputFieldWrapper>\n  );\n};\n\nTextField.propTypes = {\n  /**\n   * Name of the text field\n   */\n  name: string,\n  /**\n   * Function called on onChange event\n   */\n  onChange: func.isRequired,\n  /**\n   * Passes `disabled` attribute to input element\n   */\n  disabled: bool,\n};\n\nTextField.defaultProps = {\n  name: 'textfield',\n  disabled: false,\n  onChange: () => null,\n};\n\nexport default TextField;","import TextField from './TextField';\n\nexport default TextField;","import styled from 'styled-components';\nimport { gravel, slate } from '../../themes/colors';\n\nconst StyledFieldSeparator = styled.div`\n  height: 3.125rem;\n  max-width: 5rem;\n  text-align: center;\n  padding: 1rem;\n  background: ${gravel};\n  color: ${slate};\n`;\n\nconst FieldSeparatorWrapper = styled.div`\n  max-width: 5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport {\n  StyledFieldSeparator,\n  FieldSeparatorWrapper,\n};","import React from 'react';\nimport { string } from 'prop-types';\nimport {\n  StyledFieldSeparator,\n  FieldSeparatorWrapper,\n} from './FieldSeparator.styled';\n\nconst FieldSeparator = (props) => {\n  return (\n    <FieldSeparatorWrapper>\n      <StyledFieldSeparator>{props.separator}</StyledFieldSeparator>\n    </FieldSeparatorWrapper>\n  );\n}\n\nFieldSeparator.propTypes = {\n  /**\n   * separator text\n   */\n  separator: string,\n};\n\nFieldSeparator.defaultProps = {\n  separator: 'AND',\n};\n\nexport default FieldSeparator;\n","import FieldSeparator from './FieldSeparator';\n\nexport default FieldSeparator;","import MultiValueField from './MultiValueField';\n\nexport default MultiValueField;","import React from 'react';\nimport { func } from 'prop-types';\nimport FieldSeparator from '../FieldSeparator';\nimport TextField from '../TextField';\n\nconst MultiValueField = (props) => {\n  return (\n    <>\n      <TextField name='value' onChange={(name, value) => props.multiValueOnChange(name, value, 0)} disabled={props.disabled} />\n      <FieldSeparator />\n      <TextField name='value' onChange={(name, value) => props.multiValueOnChange(name, value, 1)} disabled={props.disabled} />\n    </>\n  );\n}\n\nMultiValueField.propTypes = {\n  /**\n   * multi-value on change function\n   */\n  multiValueOnChange: func.isRequired,\n};\n\nexport default MultiValueField;\n","import styled from 'styled-components';\nimport { FaTrash } from 'react-icons/fa';\nimport { errorRed, slate } from '../../themes/colors';\nimport { lg } from '../../themes/font-sizes';\n\nconst StyledTrashButton = styled(FaTrash)`\n  color: ${props => props.disabled ? slate : errorRed};\n  font-size: ${lg};\n  cursor: pointer;\n  display: flex;\n`;\n\nconst TrashButtonWrapper = styled.div`\n  max-width: 5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport {\n  StyledTrashButton,\n  TrashButtonWrapper\n};","import React from 'react';\nimport { bool, func } from 'prop-types';\nimport { StyledTrashButton, TrashButtonWrapper } from './TrashButton.styled';\n\nconst TrashButton = (props) => {\n  return (\n    <TrashButtonWrapper>\n      <StyledTrashButton onClick={() => !props.disabled && props.onClick()} disabled={props.disabled} />\n    </TrashButtonWrapper>\n  );\n};\n\nTrashButton.propTypes = {\n  /**\n   * Function called on onClick event\n   */\n  onClick: func.isRequired,\n  /**\n   * Passes `disabled` attribute to element\n   */\n  disabled: bool,\n};\n\nTrashButton.defaultProps = {\n  disabled: false,\n};\n\nexport default TrashButton;","import TrashButton from './TrashButton';\n\nexport default TrashButton;","import React from 'react';\nimport { arrayOf, object, func, string, bool } from 'prop-types';\nimport {\n  StyledFormWrapper,\n} from './FormWrapper.styled';\nimport SelectField from '../SelectField';\nimport TextField from '../TextField';\nimport MultiValueField from '../MultiValueField';\nimport TrashButton from '../TrashButton';\n\nconst FormWrapper = (props) => {\n  return (\n    <StyledFormWrapper>\n      <SelectField name='predicate' options={props.predicates} onChange={props.onChange} value={props.predicateValue} disabled={props.disabled} />\n      <SelectField name='operator' options={props.operators} onChange={props.onChange} value={props.operatorValue} disabled={props.disabled} />\n      {\n        props.multiValue ?\n        <MultiValueField multiValueOnChange={props.multiValueOnChange} />\n        :\n        <TextField name='value' onChange={props.onChange} disabled={props.disabled} />\n      }\n      <TrashButton onClick={props.removeFilter} disabled={props.disabled} />\n    </StyledFormWrapper>\n  );\n}\n\nFormWrapper.propTypes = {\n  /**\n   * value of predicate field\n   */\n  predicateValue: string,\n  /**\n   * value of operator field\n   */\n  operatorValue: string,\n  /**\n   * object of predicate values\n   */\n  predicates: arrayOf(object),\n  /**\n   * object of operator values\n   */\n  operators: arrayOf(object),\n  /**\n   * Function that is called when all form items except for predicate is changed\n   */\n  onChange: func.isRequired,\n  /**\n   * Whether or not filter should be multi-value\n   */\n  multiValue: bool,\n  /**\n   * onChange function for multi-value filters\n   */\n  multiValueOnChange: func.isRequired,\n  /**\n   * disabled state of form\n   */\n  disabled: bool,\n  /**\n   * function for removing a filter\n   */\n  removeFilter: func.isRequired,\n};\n\nFormWrapper.defaultProps = {\n  onChange: () => {},\n  multiValue: false,\n  disabled: false,\n};\n\nexport default FormWrapper;\n","import styled from 'styled-components';\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  max-width: 70rem;\n  padding: 1rem 1rem 0;\n  margin: 0 auto;\n`;\n\nexport default AppWrapper;\n","import styled from 'styled-components';\nimport { FaWindowClose } from 'react-icons/fa';\nimport { white, errorRed } from '../../themes/colors';\n\nconst ErrorMessageContainer = styled.div`\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n`;\n\nconst ErrorMessageBox = styled.div`\n  position: relative;\n  width: 24rem;\n  color: ${white};\n  background: ${errorRed};\n  border-radius: 1rem;\n  padding: 1rem 3rem 1rem 1rem;\n  margin: 1rem 0 1rem;\n`;\n\nconst CloseIcon = styled(FaWindowClose)`\n  font-size: 1.2rem;\n  color: ${white};\n  position: absolute;\n  top: 1rem;\n  right: 1rem;\n  cursor: pointer;\n`;\n\nexport {\n  ErrorMessageBox,\n  CloseIcon,\n  ErrorMessageContainer,\n}","import React from 'react';\nimport { string, func } from 'prop-types';\nimport {\n  ErrorMessageBox,\n  CloseIcon,\n} from './ErrorMessage.styled';\n\nconst ErrorMessage = (props) => {\n  return (\n    <ErrorMessageBox>\n      {props.error}\n      <CloseIcon onClick={props.dismissError} />\n    </ErrorMessageBox>\n  );\n}\n\nErrorMessage.propTypes = {\n  /**\n   * error message\n   */\n  error: string.isRequired,\n  /**\n   * function for dismissing the error\n   */\n  dismissError: func.isRequired,\n};\n\nexport default ErrorMessage;\n","import styled from 'styled-components';\nimport { white, water } from '../../themes/colors';\nimport { FaSpinner } from 'react-icons/fa';\n\nconst LoadingOverlay = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  height: 100%;\n  z-index: 1;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${white};\n  font-family: Brandon, sans-serif;\n  font-size: 10vw;\n`;\n\nconst StyledSpinner = styled(FaSpinner)`\n  display: flex;\n  animation: spin infinite 2s linear;\n  color: ${water};\n\n  @keyframes spin {\n    from { transform: rotate(0deg); }\n    to { transform: rotate(360deg); }\n  }\n`;\n\nexport { LoadingOverlay, StyledSpinner };","import LoadingSpinner from './LoadingSpinner';\n\nexport default LoadingSpinner;","import React from 'react';\nimport { LoadingOverlay, StyledSpinner } from './LoadingSpinner.styled';\n\nconst LoadingSpinner = () => (\n  <LoadingOverlay >\n    <StyledSpinner />\n  </LoadingOverlay>\n);\n\nexport default LoadingSpinner;\n","import styled from 'styled-components';\nimport { slate, gravel } from '../../themes/colors';\n\nconst ResultBox = styled.div`\n  width: 100%;\n  padding: 1.5rem;\n  margin: 1rem 0 0;\n  background: ${gravel};\n  border: 1px solid ${slate};\n  border-radius: 1rem;\n`;\n\nexport default ResultBox;","import ResultBox from './ResultBox.styled';\n\nexport default ResultBox;","import React, { Component } from 'react';\nimport Button from './components/Button';\nimport { FormWrapper, StyledFormWrapper } from './components/FormWrapper';\nimport AppWrapper from './App.styled';\nimport { ErrorMessage, ErrorMessageContainer } from './shared/ErrorMessage';\nimport LoadingSpinner from './shared/LoadingSpinner';\nimport { BUILD_CONTENT_ENDPOINT, BUILD_QUERY_ENDPOINT } from './shared/constants';\nimport ResultBox from './components/ResultBox';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filters: [],\n      errors: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isFetching: true });\n    fetch(BUILD_CONTENT_ENDPOINT).then((content) => {\n      content.json().then((content) => {\n        Object.keys(content).forEach((key) => {\n          this.setState(() => { return { [key]: content[key] } });\n        });\n        this.setState({ isFetching: false });\n        this.addFilter();\n      });\n    });\n  }\n\n  addFilter() {\n    this.setState({ filters: this.state.filters.concat([ this.getInitialFilter() ]) });\n  }\n\n  dismissError(index) {\n    this.setState({ errors: this.state.errors.filter((error, errorIndex) => errorIndex !== index) });\n  }\n\n  updateFilter(index, key, value) {\n    this.setState(prevState => {\n      const newFilters = [...prevState.filters];\n      newFilters[index] = { ...newFilters[index], [key]: value };\n      return { filters: newFilters };\n    });\n  }\n\n  updateMultiValueFilter(index, key, value, multiValueIndex) {\n    const filterKeyVal = [...(this.state.filters[index][key] || [])];\n    filterKeyVal[multiValueIndex] = value;\n    this.updateFilter(index, key, filterKeyVal);\n  }\n\n  getActiveOperators(index) {\n    return this.state.operators[this.state.predicates.filter((predicate) => this.state.filters[index].predicate === predicate.title)[0].type];\n  }\n\n  getFullOperator(index) {\n    return this.getActiveOperators(index).filter((operator) => operator.title === this.state.filters[index].operator)[0] || {};\n  }\n\n  getInitialFilter() {\n    return {\n      predicate: this.state.predicates[0].title,\n      operator: this.state.operators[this.state.predicates[0].type][0].title,\n    };\n  }\n\n  removeFilter(index) {\n    this.setState({ filters: this.state.filters.filter((item, filterIndex) => index !== filterIndex) });\n  }\n\n  submitForm(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.validateForm()) {\n      this.setState({ isLoading: true });\n      fetch(BUILD_QUERY_ENDPOINT, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ filters: this.state.filters })\n      }).then((response) => {\n        response.json().then((query) => {\n          this.setState({ isLoading: false })\n          this.setState({ query: query.query });\n        });\n      });\n    }\n  }\n\n  validateForm() {\n    const errors = this.state.filters.reduce((errors, item, index) => {\n      if (!item.value) {\n        return errors.concat([`Filter \"${item.predicate} -> ${item.operator}\" must have a value`]);\n      } else if (this.getFullOperator(index).multiValue && !Array.isArray(item.value)) {\n        return errors.concat([`Filter \"${item.predicate} -> ${item.operator}\" must have multiple values`]);\n      } else {\n        const validPatternRegex = new RegExp(this.getFullOperator(index).validPattern);\n        if (Array.isArray(item.value)) {\n          const multiValueErrors = item.value.reduce((errors, value, index) => {\n            if (!validPatternRegex.test(value)) {\n              return errors.concat([`Value ${index + 1} (\"${value}\") for filter \"${item.predicate} -> ${item.operator}\" is not valid`]);\n            }\n            return errors;\n          }, []);\n          if (item.value.length <= 1) {\n            return multiValueErrors.concat([`Filter \"${item.predicate} -> ${item.operator}\" must have all values filled out`]);\n          } else {\n            return errors.concat(multiValueErrors);\n          }\n        } else {\n          debugger;\n          if (!validPatternRegex.test(item.value)) {\n            return errors.concat([`Value \"${item.value}\" for filter \"${item.predicate} -> ${item.operator}\" is not valid`]);\n          }\n        }\n      }\n      return errors;\n    }, []);\n\n    this.setState({\n      errors,\n    });\n\n    if (errors.length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <AppWrapper>\n        {\n          this.state.isFetching ?\n          <LoadingSpinner /> :\n          <>\n            <form onSubmit={(event) => this.submitForm(event)}>\n            { \n              this.state.filters.map((item, index) => {\n                return <FormWrapper\n                  key={`filter-${index}`}\n                  predicates={this.state.predicates}\n                  operators={this.getActiveOperators(index)}\n                  onChange={(key, value) => this.updateFilter(index, key, value)}\n                  multiValueOnChange={(key, value, multiValueIndex) => this.updateMultiValueFilter(index, key, value, multiValueIndex)}\n                  predicateValue={item.predicate}\n                  operatorValue={item.operator}\n                  multiValue={this.getFullOperator(index).multiValue}\n                  disabled={this.state.isLoading}\n                  removeFilter={() => this.removeFilter(index)}\n                />\n              })\n            }\n            <StyledFormWrapper>\n              <Button\n                onClick={() => this.addFilter()}\n                disabled={this.state.isLoading}\n                isLoading={this.state.isLoading}\n              >Add Filter</Button>\n              <Button\n                disabled={this.state.isLoading}\n                isLoading={this.state.isLoading}\n                submitType={true}\n              >Submit</Button>\n            </StyledFormWrapper>\n          </form>\n          <ErrorMessageContainer>\n            { \n              this.state.errors.map((item, index) => {\n                return <ErrorMessage\n                  key={`error-${index}`}\n                  error={item}\n                  dismissError={() => this.dismissError(index)}\n                />\n              })\n            }\n          </ErrorMessageContainer>\n          {\n            this.state.query &&\n            <ResultBox>\n              <pre>\n              { this.state.query }\n              </pre>\n            </ResultBox>\n          }\n        </>\n        }\n      </AppWrapper>\n\n    );\n  }\n}\n\nexport default App;\n","const BUILD_CONTENT_ENDPOINT = \"https://us-central1-ethereal-anvil-225013.cloudfunctions.net/content\";\nconst BUILD_QUERY_ENDPOINT = \"https://us-central1-ethereal-anvil-225013.cloudfunctions.net/query\";\n\nexport {\n  BUILD_CONTENT_ENDPOINT,\n  BUILD_QUERY_ENDPOINT,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}